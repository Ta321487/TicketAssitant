<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="TA_WPF.Views.CollectionTicketsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TA_WPF.Views"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewmodels="clr-namespace:TA_WPF.ViewModels"
        xmlns:converters="clr-namespace:TA_WPF.Converters"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Height="650" Width="1000"
        WindowStartupLocation="CenterOwner"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="{Binding MainViewModel.FontSize}"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="Microsoft YaHei">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
            <SolidColorBrush x:Key="MaterialDesignDarkForeground" Color="White" />
            
            <!-- 数据表格单元格样式 -->
            <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Padding" Value="8,4" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{Binding Path=DataContext.MainViewModel.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                VerticalAlignment="Center" 
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding Path=DataContext.MainViewModel.IsDarkMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- 数据表格文本列样式 -->
            <Style x:Key="DataGridTextColumnElementStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{Binding Path=DataContext.MainViewModel.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                <Setter Property="Padding" Value="4,2" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=DataContext.MainViewModel.IsDarkMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- 数据表格行样式 -->
            <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Setter Property="Height" Value="{Binding Path=DataContext.DataGridRowHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderThickness" Value="4,0,0,0" />
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        <!-- Background and Foreground for selected row should be handled by MaterialDesign or not set here to allow transparent selection for custom border -->
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Path=DataContext.MainViewModel.IsDarkMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=AlternationIndex}" Value="0">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=AlternationIndex}" Value="1">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignAlternatingRowBackground}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- 数据表格列头样式 -->
            <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="{Binding Path=DataContext.MainViewModel.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                <Setter Property="Padding" Value="12,8" />
                <Setter Property="MinHeight" Value="45" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>

            <!-- ComboBox 样式 -->
            <Style x:Key="MaterialDesignThemedComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- 操作栏 -->
        <Grid Grid.Row="0" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- 左侧按钮区域 -->
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Button Command="{Binding AddTicketsCommand}" 
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        Margin="0,0,8,0"
                        Height="36">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="TicketOutline" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="添加车票" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>

                <Button Command="{Binding RemoveTicketsCommand}" 
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        IsEnabled="{Binding HasSelectedItems}"
                        Margin="0,0,8,0"
                        Height="36">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="TicketPercent" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="移除车票" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>

                <Button Command="{Binding SelectAllCommand}"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="全选"
                        Margin="0,0,8,0"
                        Visibility="{Binding HasData, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        Height="36">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="CheckboxMultipleMarkedOutline" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="全选" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>

                <Button Command="{Binding InvertSelectionCommand}"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="反选"
                        Margin="0,0,8,0"
                        Visibility="{Binding HasData, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        Height="36">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="CheckboxMultipleMarkedCircleOutline" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="反选" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>

                <Button Command="{Binding UnselectAllCommand}"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="取消选择"
                        Margin="0,0,8,0"
                        Visibility="{Binding HasData, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        Height="36">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="CheckboxMultipleBlankOutline" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="取消选择" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </StackPanel>

            <!-- 收藏夹信息 -->
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="{Binding Collection.CollectionName}" 
                           Style="{StaticResource MaterialDesignHeadline6TextBlock}" 
                           Foreground="{DynamicResource MaterialDesignBody}" 
                           FontWeight="Medium"/>
                <TextBlock Text=" | " 
                           Style="{StaticResource MaterialDesignHeadline6TextBlock}" 
                           Foreground="{DynamicResource MaterialDesignBody}" 
                           FontWeight="Medium"/>
                <TextBlock Text="车票数量: " 
                           Style="{StaticResource MaterialDesignHeadline6TextBlock}" 
                           Foreground="{DynamicResource MaterialDesignBody}" 
                           FontWeight="Medium"/>
                <TextBlock Text="{Binding Collection.TicketCount}" 
                           Style="{StaticResource MaterialDesignHeadline6TextBlock}" 
                           Foreground="{DynamicResource PrimaryHueMidBrush}" 
                           FontWeight="Bold"/>
            </StackPanel>

            <!-- 右侧刷新按钮 -->
            <Button Grid.Column="2" 
                    Command="{Binding RefreshCommand}" 
                    Style="{StaticResource MaterialDesignIconButton}"
                    ToolTip="刷新"
                    Foreground="{DynamicResource PrimaryHueMidBrush}">
                <materialDesign:PackIcon Kind="Refresh" Width="24" Height="24" />
            </Button>
        </Grid>

        <!-- 数据显示区域 -->
        <Grid Grid.Row="1" Margin="10,0,10,10">
            <!-- 暂无数据提示 -->
            <TextBlock Text="暂无车票数据" 
                      HorizontalAlignment="Center" 
                      VerticalAlignment="Center"
                      Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                      Foreground="{DynamicResource MaterialDesignBodyLight}"
                      Visibility="{Binding HasNoData, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            
            <!-- 数据表格 -->
            <DataGrid x:Name="TicketsDataGrid"
                      ItemsSource="{Binding Tickets}"
                      SelectedItem="{Binding SelectedTicket, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      IsReadOnly="True"
                      AutoGenerateColumns="False"
                      HeadersVisibility="Column"
                      SelectionMode="Extended"
                      SelectionUnit="FullRow"
                      EnableRowVirtualization="True"
                      EnableColumnVirtualization="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                      VirtualizingPanel.ScrollUnit="Pixel"
                      CanUserResizeRows="False"
                      CanUserSortColumns="False"
                      CanUserReorderColumns="False"
                      IsManipulationEnabled="True"
                      FontSize="{Binding MainViewModel.FontSize}"
                      RowHeight="{Binding DataGridRowHeight}"
                      materialDesign:DataGridAssist.CellPadding="12 6 12 6"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="12 8 12 8"
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Auto"
                      GridLinesVisibility="None"
                      HorizontalGridLinesBrush="{DynamicResource MaterialDesignDivider}"
                      VerticalGridLinesBrush="{DynamicResource MaterialDesignDivider}"
                      BorderThickness="0"
                      BorderBrush="{DynamicResource MaterialDesignDivider}"
                      Foreground="{DynamicResource MaterialDesignBody}"
                      AlternatingRowBackground="{DynamicResource MaterialDesignAlternatingRowBackground}"
                      Background="{DynamicResource MaterialDesignPaper}"
                      RowBackground="Transparent"
                      Margin="0"
                      Padding="0"
                      AlternationCount="2"
                      ColumnWidth="*"
                      Visibility="{Binding HasData, Converter={StaticResource BooleanToVisibilityConverter}}"
                      SelectionChanged="TicketsDataGrid_SelectionChanged">
                
                <DataGrid.Resources>
                    <!-- 完全覆盖MaterialDesign默认的选中样式 -->
                    <SolidColorBrush x:Key="MaterialDesignSelection" Color="#00000000" />
                </DataGrid.Resources>
                
                <!-- 数据表格样式 -->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridRowStyle}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <StaticResource ResourceKey="DataGridCellStyle"/>
                </DataGrid.CellStyle>
                <DataGrid.ColumnHeaderStyle>
                    <StaticResource ResourceKey="DataGridColumnHeaderStyle"/>
                </DataGrid.ColumnHeaderStyle>
                
                <DataGrid.Columns>
                    <!-- 出发车站 -->
                    <DataGridTextColumn Header="出发车站" Binding="{Binding DepartStation}" Width="1.5*" 
                                        ElementStyle="{StaticResource DataGridTextColumnElementStyle}"/>
                    
                    <!-- 车次号 -->
                    <DataGridTextColumn Header="车次号" Binding="{Binding TrainNo}" Width="1*" 
                                        ElementStyle="{StaticResource DataGridTextColumnElementStyle}"/>
                    
                    <!-- 到达车站 -->
                    <DataGridTextColumn Header="到达车站" Binding="{Binding ArriveStation}" Width="1.5*" 
                                        ElementStyle="{StaticResource DataGridTextColumnElementStyle}"/>
                    
                    <!-- 出发日期 -->
                    <DataGridTextColumn Header="出发日期" Binding="{Binding DepartDate, StringFormat=yyyy-MM-dd}" Width="1*" 
                                        ElementStyle="{StaticResource DataGridTextColumnElementStyle}"/>
                    
                    <!-- 出发时间 -->
                    <DataGridTextColumn Header="出发时间" Binding="{Binding DepartTime, StringFormat=hh\\:mm}" Width="0.8*" 
                                        ElementStyle="{StaticResource DataGridTextColumnElementStyle}"/>
                    
                    <!-- 金额 -->
                    <DataGridTextColumn Header="金额" Binding="{Binding Money, StringFormat=¥{0:N2}}" Width="0.8*" 
                                        ElementStyle="{StaticResource DataGridTextColumnElementStyle}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!-- 分页控件 -->
        <Grid Grid.Row="2" Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- 左侧：页大小选择 -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Text="每页显示:" 
                           Style="{StaticResource MaterialDesignBody1TextBlock}" 
                           VerticalAlignment="Center"
                           Margin="0,0,8,0"/>
                <ComboBox ItemsSource="{Binding PaginationViewModel.PageSizeOptions}"
                          SelectedItem="{Binding PaginationViewModel.PageSize}"
                          Width="60"
                          materialDesign:HintAssist.Hint="页大小"
                          Style="{StaticResource MaterialDesignThemedComboBox}"/>
                
                <!-- 总记录数和选中项数量 -->
                <TextBlock Text="{Binding TotalCount, StringFormat=总记录数: {0}}" 
                           Style="{StaticResource MaterialDesignBody1TextBlock}" 
                           VerticalAlignment="Center"
                           Margin="16,0,0,0"/>
                
                <!-- 选择状态指示器 -->
                <TextBlock Text="{Binding SelectedItemsCount, StringFormat=已选择 {0} 项}"
                           Style="{StaticResource MaterialDesignBody1TextBlock}" 
                           VerticalAlignment="Center"
                           Margin="16,0,0,0"
                           Foreground="{DynamicResource MaterialDesignBodyLight}"
                           FontWeight="Medium"
                           Visibility="{Binding HasSelectedItems, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>

            <!-- 右侧：分页导航 -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                    <Button Command="{Binding PaginationViewModel.FirstPageCommand}" 
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="第一页"
                            Margin="0,0,4,0"
                            Foreground="{DynamicResource PrimaryHueMidBrush}"
                            IsEnabled="{Binding PaginationViewModel.CanNavigateToFirstPage}">
                        <materialDesign:PackIcon Kind="PageFirst" />
                    </Button>
                    <Button Command="{Binding PaginationViewModel.PreviousPageCommand}" 
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="上一页"
                            Margin="0,0,4,0"
                            Foreground="{DynamicResource PrimaryHueMidBrush}"
                            IsEnabled="{Binding PaginationViewModel.CanNavigateToPreviousPage}">
                        <materialDesign:PackIcon Kind="ChevronLeft" />
                    </Button>
                    <Border Background="{DynamicResource MaterialDesignPaper}" 
                            BorderBrush="{DynamicResource PrimaryHueMidBrush}" 
                            BorderThickness="1" 
                            CornerRadius="4"
                            Padding="8,4"
                            Margin="4,0"
                            Height="36">
                        <StackPanel Orientation="Horizontal" x:Name="PageInfoPanel" MouseLeftButtonDown="PageInfoPanel_MouseLeftButtonDown">
                            <TextBlock Text="{Binding PaginationViewModel.CurrentPage}" 
                                       Style="{StaticResource MaterialDesignBody1TextBlock}"
                                       FontWeight="SemiBold"
                                       Foreground="{DynamicResource PrimaryHueMidBrush}"
                                       VerticalAlignment="Center"/>
                            <TextBlock Text=" / " 
                                       Style="{StaticResource MaterialDesignBody1TextBlock}"
                                       VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding PaginationViewModel.TotalPages}" 
                                       Style="{StaticResource MaterialDesignBody1TextBlock}"
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <TextBox x:Name="PageNumberInput"
                             Width="60"
                             Height="36"
                             Margin="4,0"
                             Style="{StaticResource MaterialDesignTextBox}"
                             materialDesign:HintAssist.Hint="页码"
                             VerticalAlignment="Center"
                             HorizontalContentAlignment="Center"
                             VerticalContentAlignment="Center"
                             Visibility="Collapsed"
                             KeyDown="PageNumberInput_KeyDown"
                             LostFocus="PageNumberInput_LostFocus"/>
                    <Button Command="{Binding PaginationViewModel.NextPageCommand}" 
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="下一页"
                            Margin="4,0,0,0"
                            Foreground="{DynamicResource PrimaryHueMidBrush}"
                            IsEnabled="{Binding PaginationViewModel.CanNavigateToNextPage}">
                        <materialDesign:PackIcon Kind="ChevronRight" />
                    </Button>
                    <Button Command="{Binding PaginationViewModel.LastPageCommand}" 
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="最后一页"
                            Margin="4,0,0,0"
                            Foreground="{DynamicResource PrimaryHueMidBrush}"
                            IsEnabled="{Binding PaginationViewModel.CanNavigateToLastPage}">
                        <materialDesign:PackIcon Kind="PageLast" />
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>

        <!-- 加载指示器 -->
        <Grid Grid.Row="0" Grid.RowSpan="3" 
              Background="#80000000" 
              Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" 
                             Value="0" 
                             IsIndeterminate="True" 
                             Width="48" 
                             Height="48"
                             Margin="0,0,0,8"/>
                <TextBlock Text="加载中" 
                           Style="{StaticResource MaterialDesignBody1TextBlock}"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontWeight="Medium"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window> 