<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="TA_WPF.Views.QueryAllTicketsPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TA_WPF.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewmodels="clr-namespace:TA_WPF.ViewModels"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:TA_WPF.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1520">
    
    <!-- 设计时数据 -->
    <d:UserControl.DataContext>
        <viewmodels:DesignTimeQueryAllTicketsViewModel />
    </d:UserControl.DataContext>
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:IntEqualityToVisibilityConverter x:Key="IntEqualityToVisibilityConverter" />
            <!-- 自定义资源 -->
            <SolidColorBrush x:Key="SelectedRowBrushLight" Color="#E3F2FD" />
            <SolidColorBrush x:Key="SelectedRowBrushDark" Color="#3F51B5" Opacity="0.3" />
            <SolidColorBrush x:Key="SelectedRowTextLight" Color="#1976D2" />
            <SolidColorBrush x:Key="SelectedRowTextDark" Color="#FFFFFF" />
            <!-- 设计时属性 -->
            <system:Int32 x:Key="DesignTimeCurrentPage">1</system:Int32>
            <system:Int32 x:Key="DesignTimeTotalPages">10</system:Int32>
            <system:Int32 x:Key="DesignTimeTotalItems">100</system:Int32>
            <system:Boolean x:Key="DesignTimeIsLoading">False</system:Boolean>
            <x:Array x:Key="DesignTimePageSizeOptions" Type="system:Int32">
                <system:Int32>10</system:Int32>
                <system:Int32>20</system:Int32>
                <system:Int32>50</system:Int32>
            </x:Array>
            
            <!-- 设计时样式 -->
            <Style x:Key="MaterialDesignPaginationTextBlock" TargetType="TextBlock">
                <Setter Property="Margin" Value="4,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="MaterialDesignPaginationComboBox" TargetType="ComboBox">
                <Setter Property="Margin" Value="4,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="MaterialDesignPaginationButton" TargetType="Button">
                <Setter Property="Margin" Value="4,0" />
                <Setter Property="Padding" Value="4" />
                <Setter Property="MinWidth" Value="36" />
                <Setter Property="MinHeight" Value="36" />
            </Style>
            <Style x:Key="MaterialDesignCompactTextBox" TargetType="TextBox">
                <Setter Property="Padding" Value="4,2" />
            </Style>
            
            <!-- 数据表格行样式 -->
            <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
                <Setter Property="Height" Value="{Binding DataContext.DataGridRowHeight, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderThickness" Value="4,0,0,0" />
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                    </Trigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IsDarkMode}" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=AlternationIndex}" Value="0">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=AlternationIndex}" Value="1">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignAlternatingRowBackground}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- 数据表格单元格样式 -->
            <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="8,4" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IsDarkMode}" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- 数据表格列头样式 -->
            <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                <Setter Property="Padding" Value="12,8" />
                <Setter Property="MinHeight" Value="45" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>
            
            <!-- 自定义ToolTip样式 -->
            <Style x:Key="MaterialDesignDataGridCellToolTip" TargetType="ToolTip">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="8,4" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="MaxWidth" Value="400" />
                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            </Style>
            
            <!-- 数据表格文本列样式 -->
            <Style x:Key="DataGridTextColumnElementStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Padding" Value="4,2" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IsDarkMode}" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- ComboBox 样式 -->
            <Style x:Key="MaterialDesignThemedComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="MaterialDesignThemedOutlinedComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 控制菜单 -->
        <Grid Grid.Row="0" Margin="10,10,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <!-- 选择操作区域 -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                <Button Command="{Binding ToggleSelectionCommand}" 
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="{Binding SelectionToggleTooltip}"
                        Margin="0,0,8,0"
                        Height="36">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="{Binding SelectionToggleIcon}" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="{Binding SelectionToggleText}" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Command="{Binding InvertSelectionCommand}" 
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="反选"
                        Margin="0,0,8,0"
                        Height="36">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="CheckboxMultipleMarkedCircleOutline" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="反选" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Command="{Binding ClearSelectionCommand}" 
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="取消选择"
                        Margin="0,0,8,0"
                        Height="36"
                        Visibility="{Binding HasSelectedItems, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="CheckboxMultipleBlankOutline" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="取消选择" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Command="{Binding EditTicketCommand}" 
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="修改选中的车票"
                        Margin="0,0,8,0"
                        Height="36"
                        Visibility="{Binding SelectedItemsCount, Converter={StaticResource IntEqualityToVisibilityConverter}, ConverterParameter=1}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Edit" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="修改" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Command="{Binding DeleteTicketsCommand}" 
                        Style="{StaticResource MaterialDesignRaisedButton}"
                        ToolTip="删除选中的车票"
                        Margin="0,0,8,0"
                        Height="36"
                        Background="#F44336"
                        Foreground="White"
                        Visibility="{Binding HasSelectedItems, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Delete" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="删除" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </StackPanel>
            
            <!-- 右侧操作区域 -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Command="{Binding AdvancedQueryViewModel.ToggleQueryPanelCommand}" 
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="高级查询"
                        Margin="0,0,8,0"
                        Height="36">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Search" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="高级查询" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>

        <!-- 替换高级查询面板 -->
        <Border Grid.Row="1" 
                Margin="10,10,10,0">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AdvancedQueryViewModel.IsQueryPanelVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1" Duration="0:0:0.35">
                                            <DoubleAnimation.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" Power="2"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         From="-15" To="0" Duration="0:0:0.4">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="3"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <PowerEase EasingMode="EaseIn" Power="2"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         From="0" To="-10" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <PowerEase EasingMode="EaseIn" Power="3"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.RenderTransform>
                <TranslateTransform Y="0"/>
            </Border.RenderTransform>
            <Border.Opacity>0</Border.Opacity>
            <local:AdvancedQueryTicketPanel DataContext="{Binding AdvancedQueryViewModel}" />
        </Border>

        <!-- 数据表格 -->
        <Grid Grid.Row="2" Margin="10">
            <!-- 暂无数据提示 -->
            <TextBlock Text="暂无数据"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                       Foreground="{DynamicResource MaterialDesignBodyLight}"
                       Visibility="{Binding HasNoData, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            
            <DataGrid x:Name="TicketsDataGrid"
                      ItemsSource="{Binding TrainRideInfos}" 
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserResizeRows="False"
                      CanUserResizeColumns="True"
                      CanUserSortColumns="False"
                      CanUserReorderColumns="False"
                      IsReadOnly="True"
                      SelectionMode="Extended"
                      SelectionUnit="FullRow"
                      EnableRowVirtualization="True"
                      EnableColumnVirtualization="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                      VirtualizingPanel.ScrollUnit="Pixel"
                      RowHeight="{Binding DataGridRowHeight}"
                      HeadersVisibility="Column"
                      materialDesign:DataGridAssist.CellPadding="12 6 12 6"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="12 8 12 8"
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Auto"
                      GridLinesVisibility="None"
                      HorizontalGridLinesBrush="{DynamicResource MaterialDesignDivider}"
                      VerticalGridLinesBrush="{DynamicResource MaterialDesignDivider}"
                      AlternatingRowBackground="{DynamicResource MaterialDesignAlternatingRowBackground}"
                      Background="{DynamicResource MaterialDesignPaper}"
                      RowBackground="Transparent"
                      Foreground="{DynamicResource MaterialDesignBody}"
                      SelectionChanged="TicketsDataGrid_SelectionChanged"
                      MouseDoubleClick="TicketsDataGrid_MouseDoubleClick"
                      BorderThickness="0"
                      BorderBrush="{DynamicResource MaterialDesignDivider}"
                      AlternationCount="2"
                      ColumnWidth="*"
                      Visibility="{Binding HasData, Converter={StaticResource BooleanToVisibilityConverter}}">
            
                <DataGrid.Resources>
                    <!-- 完全覆盖MaterialDesign默认的选中样式 -->
                    <SolidColorBrush x:Key="MaterialDesignSelection" Color="#00000000" />
                    
                    <!-- 重写单元格样式 -->
                    <Style x:Key="TransparentSelectionCellStyle" TargetType="DataGridCell">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="8,4"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Background="Transparent"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                
                <!-- 数据表格样式 -->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridRowStyle}">
                        <EventSetter Event="Selected" Handler="DataGridRow_Selected"/>
                        <EventSetter Event="Unselected" Handler="DataGridRow_Unselected"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell" BasedOn="{StaticResource TransparentSelectionCellStyle}"/>
                </DataGrid.CellStyle>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeaderStyle}"/>
                </DataGrid.ColumnHeaderStyle>
                
                <!-- 数据表格列 -->
                <DataGrid.Columns>
                    <!-- 其他列 -->
                    <DataGridTextColumn Header="取票号" Binding="{Binding TicketNumber}" Width="*" MinWidth="80" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="检票口" Binding="{Binding CheckInLocation}" Width="*" MinWidth="80" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="出发车站" Binding="{Binding DepartStation}" Width="*" MinWidth="100" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="出发拼音" Binding="{Binding DepartStationPinyin}" Width="*" MinWidth="100" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="车次号" Binding="{Binding TrainNo}" Width="*" MinWidth="80" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="到达车站" Binding="{Binding ArriveStation}" Width="*" MinWidth="100" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="到达拼音" Binding="{Binding ArriveStationPinyin}" Width="*" MinWidth="100" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="出发日期" Binding="{Binding DepartDate, StringFormat=\{0:yyyy-MM-dd\}}" Width="*" MinWidth="100" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="出发时间" Binding="{Binding DepartTime, StringFormat=\{0:hh\\:mm\}}" Width="*" MinWidth="80" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="车厢号" Binding="{Binding CoachNo}" Width="*" MinWidth="80" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="座位号" Binding="{Binding SeatNo}" Width="*" MinWidth="80" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="金额" Binding="{Binding Money, StringFormat=¥\{0:N2\}}" Width="*" MinWidth="80" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="座位类型" Binding="{Binding SeatType}" Width="*" MinWidth="100" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="附加信息" Binding="{Binding AdditionalInfo}" Width="*" MinWidth="120" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="车票用途" Binding="{Binding TicketPurpose}" Width="*" MinWidth="100" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                    <DataGridTextColumn Header="提示" Binding="{Binding Hint}" Width="*" MinWidth="120" ElementStyle="{StaticResource DataGridTextColumnElementStyle}" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!-- 分页控制 -->
        <Grid Grid.Row="3" Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- 左侧：页大小选择 -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="每页显示:" 
                           Style="{StaticResource MaterialDesignBody1TextBlock}" 
                               VerticalAlignment="Center"
                           Margin="0,0,8,0"/>
                    <ComboBox ItemsSource="{Binding PageSizeOptions}"
                              SelectedItem="{Binding PageSize}"
                          Width="60"
                          materialDesign:HintAssist.Hint="页大小"
                          Style="{StaticResource MaterialDesignThemedComboBox}"/>
                
                <!-- 总记录数和选中项数量 -->
                <TextBlock Text="{Binding TotalItems, StringFormat=总记录数: {0}}" 
                           Style="{StaticResource MaterialDesignBody1TextBlock}" 
                           VerticalAlignment="Center"
                           Margin="16,0,0,0"/>
                
                <!-- 选择状态指示器 -->
                <TextBlock Text="{Binding SelectionSummary}" 
                           Style="{StaticResource MaterialDesignBody1TextBlock}" 
                           VerticalAlignment="Center"
                           Margin="16,0,0,0"
                           Foreground="{DynamicResource MaterialDesignBodyLight}"
                           FontWeight="Medium"
                           Visibility="{Binding SelectionSummary, Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>

            <!-- 右侧：分页导航 -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                    <Button Command="{Binding FirstPageCommand}" 
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="第一页"
                            Margin="0,0,4,0"
                            IsEnabled="{Binding CanNavigateToFirstPage}">
                        <materialDesign:PackIcon Kind="PageFirst" />
                    </Button>
                    <Button Command="{Binding PreviousPageCommand}" 
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="上一页"
                            Margin="0,0,4,0"
                            IsEnabled="{Binding CanNavigateToPreviousPage}">
                        <materialDesign:PackIcon Kind="ChevronLeft" />
                    </Button>
                    <Border Background="{DynamicResource MaterialDesignPaper}" 
                            BorderBrush="{DynamicResource MaterialDesignDivider}" 
                            BorderThickness="1" 
                            CornerRadius="4"
                            Padding="8,4"
                            Margin="4,0"
                            Height="36">
                        
                            <StackPanel Orientation="Horizontal" x:Name="PageInfoPanel" MouseLeftButtonDown="PageInfoPanel_MouseLeftButtonDown">
                                <TextBlock Text="{Binding CurrentPage}" 
                                           Style="{StaticResource MaterialDesignBody1TextBlock}"
                                           FontWeight="SemiBold"
                                           VerticalAlignment="Center"/>
                                <TextBlock Text=" / " 
                                           Style="{StaticResource MaterialDesignBody1TextBlock}"
                                           VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding TotalPages}" 
                                           Style="{StaticResource MaterialDesignBody1TextBlock}"
                                           VerticalAlignment="Center"/>
                            </StackPanel>
                    </Border>
                            <TextBox x:Name="PageNumberInput"
                                     Width="60"
                             Height="36"
                             Margin="4,0"
                                     Style="{StaticResource MaterialDesignTextBox}"
                                     materialDesign:HintAssist.Hint="页码"
                             VerticalAlignment="Center"
                                     HorizontalContentAlignment="Center"
                                     VerticalContentAlignment="Center"
                             Visibility="Collapsed"
                             KeyDown="PageNumberInput_KeyDown"
                             LostFocus="PageNumberInput_LostFocus"/>
                    <Button Command="{Binding NextPageCommand}" 
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="下一页"
                            Margin="4,0,0,0"
                            IsEnabled="{Binding CanNavigateToNextPage}">
                        <materialDesign:PackIcon Kind="ChevronRight" />
                    </Button>
                    <Button Command="{Binding LastPageCommand}" 
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="最后一页"
                            Margin="4,0,0,0"
                            IsEnabled="{Binding CanNavigateToLastPage}">
                        <materialDesign:PackIcon Kind="PageLast" />
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>
        
        <!-- 加载指示器 -->
        <Grid Grid.Row="0" Grid.RowSpan="4" 
              Background="#80000000" 
              Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
            <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" 
                         Value="0" 
                         IsIndeterminate="True" 
                         Width="48" 
                             Height="48"
                             Margin="0,0,0,8"/>
                <TextBlock Text="加载中" 
                           Style="{StaticResource MaterialDesignBody1TextBlock}"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontWeight="Medium"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl> 