<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="TA_WPF.Views.AdvancedQueryTicketPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TA_WPF.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewmodels="clr-namespace:TA_WPF.ViewModels"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:TA_WPF.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="800">
    
    <!-- 设计时数据 -->
    <d:UserControl.DataContext>
        <viewmodels:DesignTimeAdvancedQueryTicketViewModel />
    </d:UserControl.DataContext>
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            
            <!-- 增强的MaterialDesign输入框样式 - 改善深色模式下的可见性 -->
            <Style x:Key="EnhancedMaterialDesignOutlinedTextBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource GlobalAccentBrush}" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource GlobalAccentBrush}" />
                <Setter Property="FontSize" Value="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Style.Triggers>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource GlobalAccentBrush}" />
                        <Setter Property="materialDesign:HintAssist.Background" Value="{DynamicResource MaterialDesignPaper}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- 增强的ComboBox样式 - 改善深色模式下的可见性 -->
            <Style x:Key="EnhancedMaterialDesignOutlinedComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource GlobalAccentBrush}" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource GlobalAccentBrush}" />
                <Setter Property="FontSize" Value="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource GlobalAccentBrush}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource GlobalAccentBrush}"/>
                        <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource GlobalAccentBrush}" />
                        <Setter Property="materialDesign:HintAssist.Background" Value="{DynamicResource MaterialDesignPaper}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- ComboBox 样式 -->
            <Style x:Key="MaterialDesignThemedComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Setter Property="FontSize" Value="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource GlobalAccentBrush}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource GlobalAccentBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="MaterialDesignThemedOutlinedComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Setter Property="FontSize" Value="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource GlobalAccentBrush}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource GlobalAccentBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- 自定义ToolTip样式 -->
            <Style x:Key="CustomToolTipStyle" TargetType="ToolTip">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="{DynamicResource GlobalAccentBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="8,4" />
                <Setter Property="FontSize" Value="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="1" BlurRadius="3" Opacity="0.3" Color="Black" />
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <!-- 高级查询面板 -->
    <Border Background="{DynamicResource MaterialDesignCardBackground}"
            CornerRadius="4"
            BorderBrush="{DynamicResource GlobalAccentBrush}"
            BorderThickness="1"
            Padding="16"
            Visibility="{Binding IsQueryPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- 查询条件 -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- 出发站 -->
                <StackPanel Grid.Column="0" Margin="0,0,8,0">
                    <TextBlock Text="出发站" Style="{StaticResource MaterialDesignBody1TextBlock}" 
                              FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Margin="0,0,0,4"/>
                    <Grid>
                        <TextBox Text="{Binding DepartStationSearchText, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource EnhancedMaterialDesignOutlinedTextBox}"
                                    materialDesign:HintAssist.Hint="输入出发站"
                                    InputMethod.IsInputMethodEnabled="True"
                                    InputMethod.PreferredImeState="On"
                                    InputMethod.PreferredImeConversionMode="Native"/>
                        <Button Style="{StaticResource MaterialDesignIconButton}"
                                Command="{Binding ClearDepartStationCommand}"
                                ToolTip="清空出发站"
                                ToolTipService.ToolTip="清空出发站"
                                ToolTipService.InitialShowDelay="500"
                                Width="32" Height="32"
                                Padding="4"
                                Foreground="{DynamicResource GlobalAccentBrush}"
                                HorizontalAlignment="Right"
                                Margin="0,0,8,0"
                                Visibility="{Binding SelectedDepartStation, Converter={StaticResource NullToVisibilityConverter}}">
                            <materialDesign:PackIcon Kind="Close" Width="16" Height="16"/>
                        </Button>
                        <Popup IsOpen="{Binding IsDepartStationDropdownOpen}" 
                                PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}"
                                Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}"
                                StaysOpen="False">
                            <Border Background="{DynamicResource MaterialDesignPaper}" 
                                    BorderBrush="{DynamicResource MaterialDesignDivider}" 
                                    BorderThickness="1" 
                                    MaxHeight="200">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <ItemsControl ItemsSource="{Binding DepartStationSuggestions}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Command="{Binding DataContext.SelectDepartStationCommand, 
                                                                RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                        CommandParameter="{Binding}"
                                                        Content="{Binding StationName}"
                                                        HorizontalContentAlignment="Left"
                                                        HorizontalAlignment="Stretch"
                                                        Style="{StaticResource MaterialDesignFlatButton}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </StackPanel>

                <!-- 车次号 -->
                <StackPanel Grid.Column="1" Margin="0,0,8,0">
                    <TextBlock Text="车次号" Style="{StaticResource MaterialDesignBody1TextBlock}" 
                              FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Margin="0,0,0,4"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Column="0"
                                    ItemsSource="{Binding TrainPrefixes}"
                                    SelectedItem="{Binding SelectedTrainPrefix}"
                                    Margin="0,0,8,0"
                                    Style="{StaticResource EnhancedMaterialDesignOutlinedComboBox}"/>
                        <Grid Grid.Column="1">
                            <TextBox Text="{Binding TrainNumberFilter, UpdateSourceTrigger=PropertyChanged}"
                                     materialDesign:HintAssist.Hint="输入车次号"
                                     Style="{StaticResource EnhancedMaterialDesignOutlinedTextBox}"
                                     PreviewTextInput="TrainNumber_PreviewTextInput"/>
                            <Button Style="{StaticResource MaterialDesignIconButton}"
                                    Command="{Binding ClearTrainNumberCommand}"
                                    ToolTip="清空车次号"
                                    ToolTipService.ToolTip="清空车次号"
                                    ToolTipService.InitialShowDelay="500"
                                    Width="32" Height="32"
                                    Padding="4"
                                    Foreground="{DynamicResource GlobalAccentBrush}"
                                    HorizontalAlignment="Right"
                                    Margin="0,0,8,0"
                                    Visibility="{Binding TrainNumberFilter, Converter={StaticResource StringToVisibilityConverter}}">
                                <materialDesign:PackIcon Kind="Close" Width="16" Height="16"/>
                            </Button>
                        </Grid>
                    </Grid>
                </StackPanel>

                <!-- 出发年份 -->
                <StackPanel Grid.Column="2" Margin="0,0,8,0">
                    <TextBlock Text="出发年份" Style="{StaticResource MaterialDesignBody1TextBlock}" 
                              FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Margin="0,0,0,4"/>
                    <Grid>
                        <ComboBox ItemsSource="{Binding YearOptions}"
                                    DisplayMemberPath="DisplayName"
                                    SelectedItem="{Binding SelectedYearOption}"
                                    materialDesign:HintAssist.Hint="选择年份"
                                    Style="{StaticResource EnhancedMaterialDesignOutlinedComboBox}"/>
                        <Button Style="{StaticResource MaterialDesignIconButton}"
                                Command="{Binding ClearYearCommand}"
                                ToolTip="清空年份"
                                ToolTipService.ToolTip="清空年份"
                                ToolTipService.InitialShowDelay="500"
                                Width="32" Height="32"
                                Padding="4"
                                Foreground="{DynamicResource GlobalAccentBrush}"
                                HorizontalAlignment="Right"
                                Margin="0,0,8,0"
                                Visibility="{Binding SelectedYearOption, Converter={StaticResource NullToVisibilityConverter}}">
                            <materialDesign:PackIcon Kind="Close" Width="16" Height="16"/>
                        </Button>
                    </Grid>
                </StackPanel>
            </Grid>

            <!-- 查询条件类型选择 -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,16,0,0">
                <TextBlock Text="查询条件组合方式:" 
                            Style="{StaticResource MaterialDesignBody1TextBlock}" 
                            FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                            VerticalAlignment="Center" 
                            Margin="0,0,16,0"/>
                <RadioButton Content="AND (同时满足所有条件)" 
                                IsChecked="{Binding IsAndCondition}" 
                                Foreground="{DynamicResource GlobalAccentBrush}"
                                Background="{DynamicResource GlobalAccentBrush}"
                                BorderBrush="{DynamicResource GlobalAccentBrush}"
                                FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                GroupName="QueryConditionType" 
                                Margin="0,0,16,0"/>
                <RadioButton Content="OR (满足任一条件)" 
                                IsChecked="{Binding IsOrCondition}" 
                                Foreground="{DynamicResource GlobalAccentBrush}"
                                Background="{DynamicResource GlobalAccentBrush}"
                                BorderBrush="{DynamicResource GlobalAccentBrush}"
                                FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                GroupName="QueryConditionType"/>
            </StackPanel>

            <!-- 操作按钮 -->
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,16,0,0">
                <Button Content="重置" 
                        Command="{Binding ResetFilterCommand}" 
                        Style="{StaticResource MaterialDesignOutlinedButton}" 
                        Foreground="{DynamicResource GlobalAccentBrush}"
                        BorderBrush="{DynamicResource GlobalAccentBrush}"
                        FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                        Margin="0,0,16,0"/>
                <Button Content="{Binding QueryButtonText}" 
                        Command="{Binding ApplyFilterCommand}" 
                        Background="{DynamicResource GlobalAccentBrush}"
                        Foreground="White"
                        FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                        Style="{StaticResource MaterialDesignRaisedButton}"/>
            </StackPanel>
        </Grid>
    </Border>
</UserControl> 